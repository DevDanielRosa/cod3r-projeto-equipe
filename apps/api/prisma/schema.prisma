// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id              String           @id @default(uuid())
  name            String
  email           String           @unique
  password        String?
  phone           String?
  profileUrl      String?
  recoveryToken   String?
  tokenExpiration String?
  twoFactorAuth   Boolean          @default(false)
  createdAt       DateTime?        @default(now())
  updatedAt       DateTime?        @updatedAt
  disabledAt      DateTime?
  UserPermission  UserPermission[]
  UserProfile     UserProfile[]
  Audit           Audit[]

  //active Boolean - considered true if disabledAt has value
  @@map("users")
}

model Profile {
  id                Int                 @id @default(autoincrement())
  name              String              @unique
  description       String?
  createdAt         DateTime?           @default(now())
  updatedAt         DateTime?           @updatedAt
  disabledAt        DateTime?
  ProfilePermission ProfilePermission[]
  UserProfile       UserProfile[]

  //active Boolean - considered true if disabledAt has value
  @@map("profiles")
}

model Permission {
  id                Int                 @id @default(autoincrement())
  name              String              @unique
  description       String?
  createdAt         DateTime?           @default(now())
  updatedAt         DateTime?           @updatedAt
  disabledAt        DateTime?
  ProfilePermission ProfilePermission[]
  UserPermission    UserPermission[]

  //active Boolean - considered true if disabledAt has value
  @@map("permissions")
}

model UserPermission {
  id           Int        @id @default(autoincrement())
  User         User       @relation(fields: [userId], references: [id])
  userId       String
  Permission   Permission @relation(fields: [permissionId], references: [id])
  permissionId Int

  @@index([userId, permissionId])
  @@map("user_permissions")
}

model UserProfile {
  id        Int     @id @default(autoincrement())
  User      User    @relation(fields: [userId], references: [id])
  userId    String
  Profile   Profile @relation(fields: [profileId], references: [id])
  profileId Int

  @@index([userId, profileId])
  @@map("user_profile")
}

model ProfilePermission {
  id           Int        @id @default(autoincrement())
  Profile      Profile    @relation(fields: [profileId], references: [id])
  profileId    Int
  Permission   Permission @relation(fields: [permissionId], references: [id])
  permissionId Int

  @@index([profileId, permissionId])
  @@map("profile_permissions")
}

model Audit {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(now())
  moduleName   String?
  useCase      String?
  User         User?    @relation(fields: [userId], references: [id])
  userId       String?
  message      String?
  requestData  String?
  responseData String?
  beforeUpdate String?
  host         String?
  userAgent    String?

  @@map("audits")
}
